\stmt
+ for {}
+ if cond { f() } else { g() }
+ switch {default: break}
+ {}

(++ x)
+ x++
- y++
- x--
- {}

(-- x)
+ x--
- y--
- x++
- {}

(block \stmt \stmt)
+ {{}; {}}
+ {1; 2}
+ {f(); x = y}
- {}
- {{}}
- {1; 2; 3}

(block (block \...) \...)
+ {{}}
+ {{x}}
+ {{x}; y; z}
+ {{f()}; {f()}; {f()}}
- {x}
- {}

(block \... x)
+ {x}
+ {{}; x}
+ {{}; {}; x}
- {y}
- {{}; y}
- {}

(:= x y)
+ x := y
- y := x
- x = y
- {}

(:= [x y] (call f))
+ x, y := f()
- y, x := f()
- x := f()
- x, y := f(), f()
- x, y := g()
- x, y = f()
- {}

(:= [x y] [(call f)])
+ x, y := f()
- x, y = f()

(:= [x y] [a b])
+ x, y := a, b
- y, x := a, b
- x, y := b, a
- x, y = a, b
- {}

(= x y)
+ x = y
- y = x
- x := y
- {}

(= [x y] (call f))
+ x, y = f()
- y, x = f()
- x = f()
- x, y = f(), f()
- x, y = g()
- x, y := f()
- {}

(= [x y] [(call f)])
+ x, y = f()
- x, y := f()

(= [x y] [a b])
+ x, y = a, b
- y, x = a, b
- x, y = b, a
- x, y := a, b
- {}

(range (:= x xs) (= _ x))
+ for x := range xs { _ = x }
- for y := range xs { _ = x }
- for x := range ys { _ = x }
- for x := range xs {}
- for x = range xs { _ = x }
- {}

(range (:= [k v] xs) (= [_ _] [k v]))
+ for k, v := range xs { _, _ = k, v }
- for k := range xs { _, _ = k, v }
- for v := range xs { _, _ = k, v }
- for _, v := range xs { _, _ = k, v }
- for k, _ := range xs { _, _ = k, v }
- for k, v := range xs { _, _ = v, k }
- for k, v = range xs { _, _ = k, v }
- {}

(range (= x xs) (= _ x))
+ for x = range xs { _ = x }
- for y = range xs { _ = x }
- for x = range ys { _ = x }
- for x = range xs {}
- for x := range xs { _ = x }
- {}

(range (= [k v] xs) (= [_ _] [k v]))
+ for k, v = range xs { _, _ = k, v }
- for k = range xs { _, _ = k, v }
- for v = range xs { _, _ = k, v }
- for _, v = range xs { _, _ = k, v }
- for k, _ = range xs { _, _ = k, v }
- for k, v = range xs { _, _ = v, k }
- for k, v := range xs { _, _ = k, v }
- {}

(for [])
+ for {}
+ for ;; {}
- for true {}
- for 1; 2; 3 {}
- {}

(for [\nil \nil \nil])
+ for {}
+ for ;; {}
- for true {}
- {}

(for \nil)
+ for {}
- for true {}
- {}

(for \expr)
+ for cond {}
+ for next() {}
+ for true {}
+ for ; cond; {}
- for {}
- for ;; {}
- {}

(for [\expr])
+ for init;; {}
- for cond {}
- {}

(for [\expr \expr])
+ for init; cond; {}
+ for init; next(); {}
- for init; ; post {}
- {}

(for [(:= x 0) (< x 10) (++ x)])
+ for x := 0; x < 10; x++ {}
- for y := 0; x < 10; x++ {}
- for ; x < 10; x++ {}
- for x := 0; ; x++ {}
- for x := 0; x < 10; {}
- for x := 0; x < 10; x++ { _ = f() }
- for x = 0; x < 10; x++ {}
- {}
